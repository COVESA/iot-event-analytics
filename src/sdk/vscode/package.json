{
    "name": "iotea",
    "displayName": "IoT Event Analytics",
    "description": "Provides scaffolding, code completion for developing Talents for IoT Event Analytcis",
    "categories": [
        "Snippets"
    ],
    "version": "0.9.2",
    "license": "MPL-2.0",
    "private": "true",
    "author": "Bosch.IO GmbH",
    "publisher": "boschio",
    "repository": "https://github.com/GENIVI/iot-event-analytics",
    "engines": {
        "vscode": "^1.51.0"
    },
    "activationEvents": [
        "*"
    ],
    "main": "./out/src/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "iotea.createJsTalentProject",
                "title": "Create new JavaScript Talent project",
                "category": "Bosch IoT Event Analytics"
            },
            {
                "command": "iotea.startIoTeaPlatform",
                "title": "Start platform using docker-compose",
                "category": "Bosch IoT Event Analytics"
            },
            {
                "command": "iotea.stopIoTeaPlatform",
                "title": "Stop platform using docker-compose",
                "category": "Bosch IoT Event Analytics"
            },
            {
                "command": "iotea.startMosquittoBroker",
                "title": "Start mosquitto MQTT Broker using docker-compose",
                "category": "Bosch IoT Event Analytics"
            },
            {
                "command": "iotea.stopMosquittoBroker",
                "title": "Stop mosquitto MQTT Broker using docker-compose",
                "category": "Bosch IoT Event Analytics"
            },
            {
                "command": "iotea.publishMqttMessage",
                "title": "Publish an MQTT message",
                "category": "Bosch IoT Event Analytics"
            },
            {
                "command": "iotea.vss.createIoTeaTypesFromVssJson",
                "title": "Convert VSS configuration to IoT Event Analytics types configuration",
                "category": "Vehicle Signal Specification"
            },
            {
                "command": "iotea.vss.createKuksaValConfiguration",
                "title": "Create configuration for Kuksa.VAL (including VSS configuration)",
                "category": "Vehicle Signal Specification"
            }
        ],
        "snippets": [
            {
                "language": "javascript",
                "path": "./resources/snippets/javascript.json"
            }
        ],
        "configuration": {
            "title": "IoT Event Analytics",
            "properties": {
                "iotea.platform.requirements": {
                    "scope": "machine",
                    "type": "object",
                    "default": {
                        "docker": {
                            "version": ">=19.3.13",
                            "config": true
                        },
                        "compose": {
                            "version": ">=1.27.4"
                        },
                        "node": {
                            "version": ">=12.3.0"
                        },
                        "git": {
                            "version": "*"
                        },
                        "python": {
                            "version": ">=3.6.8"
                        },
                        "pip": {
                            "version": "*"
                        }
                    },
                    "description": "Requirements, which are needed for the platform to run"
                },
                "iotea.platform.requirements-check": {
                    "scope": "machine",
                    "type": "string",
                    "default": "",
                    "description": "Should not be modified manually. Stores the result of the requirements check"
                },
                "iotea.platform.api.endpoint": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "default": "http://localhost:8080/metadata/api/v1",
                    "description": "Metadata API Endpoint (port has to match given Platform API port)"
                },
                "iotea.platform.mqtt.endpoint": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "default": "mqtt://localhost:1883",
                    "description": "MQTT Endpoint (port has to match given MQTT port)"
                },
                "iotea.platform.mqtt.port": {
                    "scope": "machine-overridable",
                    "type": "number",
                    "default": 1883,
                    "description": "MQTT Port"
                },
                "iotea.platform.api.port": {
                    "scope": "machine-overridable",
                    "type": "number",
                    "default": 8080,
                    "description": "Platform API port for REST Swagger UI"
                },
                "iotea.project.root.dir": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "default": "",
                    "description": "IoT Event Analytics project root folder"
                },
                "iotea.project.docker.proxy": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "default": "",
                    "description": "The http(s) proxy used during creation of the platforms docker images (e.g. http://host.docker.internal:3128)"
                },
                "iotea.vss.path.separator": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "default": ".",
                    "description": "Path separator for VSS paths"
                },
                "iotea.vss.path.replacer": {
                    "scope": "machine-overridable",
                    "type": "object",
                    "default": {
                        ".": "$"
                    },
                    "description": "Character replacements from VSS path to IoT Event Analytics features"
                },
                "iotea.terminal.docker-sock": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "default": "",
                    "description": "Has to be set for rootless docker e.g. unix:///run/user/1001/docker.sock"
                },
                "iotea.terminal.docker": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "default": "docker",
                    "description": "Command to start docker"
                },
                "iotea.terminal.docker-compose": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "default": "docker-compose",
                    "description": "Command to start docker-compose"
                },
                "iotea.terminal.python": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "default": "python3",
                    "description": "Command to start Python 3"
                },
                "iotea.terminal.pip": {
                    "scope": "machine-overridable",
                    "type": "string",
                    "default": "pip3",
                    "description": "Pip module"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "yarn compile:prod",
        "package": "mkdirp ./lib&&vsce package --yarn --out lib/",
        "precompile:prod": "yarn precompile",
        "precompile:dev": "yarn precompile",
        "precompile": "del-cli out/&&cpy resources/**/* out/ --parents",
        "compile:dev": "tsc -p ./tsconfig.dev.json",
        "compile:prod": "tsc -p ./tsconfig.prod.json",
        "debug": "yarn watch",
        "watch": "yarn precompile&&tsc -watch -p ./tsconfig.dev.json",
        "pretest": "yarn compile:dev&&yarn run lint",
        "lint": "eslint src --ext ts",
        "test": "yarn pretest&&node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/bent": "^7.3.2",
        "@types/glob": "^7.1.3",
        "@types/mocha": "^8.0.0",
        "@types/node": "^14.14.28",
        "@types/semver": "^7.3.4",
        "@types/vscode": "^1.46.0",
        "@typescript-eslint/eslint-plugin": "^4.1.1",
        "@typescript-eslint/parser": "^4.1.1",
        "cpy-cli": "^3.1.1",
        "del-cli": "^3.0.1",
        "eslint": "^7.9.0",
        "glob": "^7.1.6",
        "mkdirp": "^1.0.4",
        "mocha": "^8.1.3",
        "typescript": "^4.0.2",
        "vsce": "^1.81.1",
        "vscode-test": "^1.4.0"
    },
    "dependencies": {
        "bent": "^7.3.12",
        "semver": "^7.3.4"
    }
}
