const AWS = require('aws-sdk');

exports.handler = async ev => {
    // Enter the endpoint of IoT Core Message Bus
    const iotdata = new AWS.IotData({
        endpoint: '<INSERT ENDPOINT HERE>',
        apiVersion: '2015-05-28'
    });

    if (ev.msgType === {{ MSG_TYPE_ERROR }}) {
        console.error(ev);
        return;
    }

    let payload = null;

    if (ev.msgType === {{ MSG_TYPE_DISCOVERY }}) {
        // Discovery message received
        payload = {{ &DISCOVERY_MESAGE }};
    }

    if (ev.msgType === {{ MSG_TYPE_EVENT }}) {
        try {
            payload = await yourBusinessLogic(ev);
        }
        catch(err) {
            console.error(ev);
            return;
        }
    }

    const params = {
        topic: ev.returnTopic,
        qos: '0'
    };

    params.payload = JSON.stringify(payload);

    return new Promise((resolve, reject) => {
        iotdata.publish(params, (err, data) => {
            if (err) {
                reject(err);
                return;
            }

            resolve({});
        });
    });
};

{{#IS_CLOUD_WORKER}}
{{> logic.worker}}
{{/IS_CLOUD_WORKER}}

{{^IS_CLOUD_WORKER}}
{{> logic.simple}}
{{/IS_CLOUD_WORKER}}