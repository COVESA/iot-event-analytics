name: Integration test

on: [push, pull_request]

jobs:
  integration_test:
    runs-on: ubuntu-latest
    name: Run integration tests

    steps:
    - uses: actions/checkout@v2

    - name: Build only the platform!
      working-directory: ${{github.workspace}}/docker-compose
      shell: bash
      # Build platform.
      run: docker-compose -f docker-compose.mosquitto.yml -f docker-compose.platform.yml --env-file .env-test build --parallel

    - name: Build integration-tests suites for all SDKs & runner
      working-directory: ${{github.workspace}}/docker-compose
      shell: bash
      # All the SDK's integration tests are dockerized and build the
      # latest version of the platform each time. 
      run: docker-compose -f docker-compose.integration_tests_js.yml -f docker-compose.integration_tests_py.yml -f docker-compose.integration_tests_cpp.yml -f docker-compose.integration_tests_runner.yml --env-file .env-test build --parallel
      
  
    - name: Start platform & ALL SDK test-suites
      working-directory: ${{github.workspace}}/docker-compose
      shell: bash 
      # It's run daemonized (docker-compose -d) since a running platform
      run: docker-compose -f docker-compose.mosquitto.yml -f docker-compose.platform.yml -f docker-compose.integration_tests_js.yml -f docker-compose.integration_tests_py.yml -f docker-compose.integration_tests_cpp.yml --env-file .env-test up -d

    - name: Start integration-test runner
      working-directory: ${{github.workspace}}/docker-compose
      shell: bash
      # This is a test as this container must exit once all tests are completed! The test runner 
      # container will exit with a basic 0:pass/1:fail code currently
      run: docker-compose -f docker-compose.integration_tests_runner.yml --env-file .env-test up
      timeout-minutes: 2

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v2
      if: always() # always run even if the previous step fails
      with:
        report_paths: 'docker-compose/junit-report.xml'
        token:  ${{secrets.GITHUB_TOKEN}}

    - name: Upload Test Report
      uses: actions/upload-artifact@v2
      with:
          name: junit-report
          path: 'docker-compose/junit-report.xml'