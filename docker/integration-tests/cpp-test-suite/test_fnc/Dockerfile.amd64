FROM alpine:3.13 as base_stage

ARG HTTP_PROXY
ARG HTTPS_PROXY

ENV HTTP_PROXY=${HTTP_PROXY}
ENV HTTPS_PROXY=${HTTPS_PROXY}

# Install all build tools & certs for paho etc
RUN apk add --no-cache \
git \
cmake \
make \
g++ \
ca-certificates


# > > > > > > > > > > > > > > > > > > > > > STAGE 1: 
FROM base_stage as build_stage
ARG INTEGRATION_TEST_PATH

# Create app directory
RUN mkdir -p /app
WORKDIR /app

# Copy C++ SDK sources
COPY /src/sdk/cpp ./src/sdk/cpp

# Copy C++ integration-Test sources
COPY ${INTEGRATION_TEST_PATH} .${INTEGRATION_TEST_PATH}

# set the directory for building the cpp app's
WORKDIR /app${INTEGRATION_TEST_PATH}

# Compile/Build with cmake tools
RUN cmake -B build -S .
RUN cmake --build build --parallel --target function_provider_for_test


# > > > > > > > > > > > > > > > > > > > > > STAGE 2: 
FROM alpine:3.13 as runtime_stage
ARG INTEGRATION_TEST_PATH

# Create app directory
RUN mkdir -p /app
WORKDIR /app

# we only want the bare minimum libraries for it to work in runtime
RUN apk add --no-cache libstdc++ libgcc

# Copy in pre-built cpp exe from build stage
COPY --from=build_stage /app${INTEGRATION_TEST_PATH}/build .${INTEGRATION_TEST_PATH}/build

WORKDIR /app${INTEGRATION_TEST_PATH}/build

CMD ./function_provider_for_test