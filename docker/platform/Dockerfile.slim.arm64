##############################################################################
# Copyright (c) 2021 Bosch.IO GmbH
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# SPDX-License-Identifier: MPL-2.0
##############################################################################

FROM arm64v8/node:12.13.0 as base

FROM base as minify-js

RUN npm config set strict-ssl false -g
RUN npm config set maxsockets 5 -g

RUN mkdir /build

# Create app directory
WORKDIR /build

# Install minification pipeline
RUN yarn init -y&&yarn add uglify-js glob yargs --dev

# Copy application source files for minification
COPY src/ ./src
COPY docker/platform ./docker/platform

# Minify source files
RUN node ./docker/platform/minify.js -i "./src/core" -g "**/*.js" -o "./src-min/src/core"
RUN node ./docker/platform/minify.js -i "./docker/platform" -g "index.js" -o "./src-min/docker/platform"

FROM base as node-modules

RUN mkdir /build

# Create app directory
WORKDIR /build

COPY package.json yarn.lock ./

RUN npm config set strict-ssl false -g
RUN npm config set maxsockets 5 -g

# Install all dependencies
RUN yarn --production --ignore-optional

# Audit all packages for security vulnerabilities
RUN yarn audit

# Shrink node_modules
RUN curl -sf https://gobinaries.com/tj/node-prune | sh

# Prune node-modules
RUN node-prune

FROM yobasystems/alpine:3.11.6-aarch64

RUN apk add --no-cache nodejs

# Set root password
# https://stackoverflow.com/questions/28721699/root-password-inside-a-docker-container
# https://www.howtogeek.com/howto/30184/10-ways-to-generate-a-random-password-from-the-command-line/
RUN echo "root:`date +%s | sha256sum | base64 | head -c 32`" | chpasswd &> /dev/null

# Create app directory
RUN mkdir -p /app

WORKDIR /app

# Copy node modules
COPY --from=node-modules /build/node_modules ./node_modules

# Copy minified application source files
COPY --from=minify-js /build/src-min ./

# Copy the application resources
COPY resources/ ./resources
COPY package.json ./

# Print modules over 1MB in size
RUN du -sh ./node_modules/* | sort -nr | grep '\dM.*'

CMD ["node", "/app/docker/platform/index.js"]